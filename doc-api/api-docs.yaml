openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    put:
      tags:
      - user-rest-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/purchases/{id}:
    get:
      tags:
      - purchase-rest-controller
      operationId: getPurchase
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PurchaseDTO"
    put:
      tags:
      - purchase-rest-controller
      operationId: updatePurchase
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PurchaseDTO"
    delete:
      tags:
      - purchase-rest-controller
      operationId: deletePurchase
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PurchaseDTO"
  /api/books/book/{id}:
    get:
      tags:
      - book-rest-controller
      operationId: getBook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookDTO"
    put:
      tags:
      - book-rest-controller
      operationId: updateBook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookDTO"
    delete:
      tags:
      - book-rest-controller
      operationId: deleteBook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookDTO"
  /api/users/:
    get:
      tags:
      - user-rest-controller
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTO"
    post:
      tags:
      - user-rest-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/reviews/:
    get:
      tags:
      - review-rest-controller
      operationId: getAllReviews
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReviewDTO"
    post:
      tags:
      - review-rest-controller
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /api/purchases/:
    post:
      tags:
      - purchase-rest-controller
      operationId: createPurchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PurchaseDTO"
  /api/books/{id}/image:
    get:
      tags:
      - book-rest-controller
      operationId: getImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
    post:
      tags:
      - book-rest-controller
      operationId: uploadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
              - file
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/books/:
    get:
      tags:
      - book-rest-controller
      operationId: getBooks
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookDTO"
    post:
      tags:
      - book-rest-controller
      operationId: createBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookDTO"
  /api/auth/refresh:
    post:
      tags:
      - login-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - login-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/reviews/user/{username}:
    get:
      tags:
      - review-rest-controller
      operationId: getReviewsByUser
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReviewDTO"
  /api/reviews/review/{id}:
    get:
      tags:
      - review-rest-controller
      operationId: getReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
    delete:
      tags:
      - review-rest-controller
      operationId: deleteReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/purchases:
    get:
      tags:
      - purchase-rest-controller
      operationId: getPurchases
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PurchaseDTO"
  /api/purchases/user/purchase/{id}:
    get:
      tags:
      - purchase-rest-controller
      operationId: getPurchasesByUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PurchaseDTO"
components:
  schemas:
    UserDTO:
      type: object
      properties:
        userName:
          type: string
        encondedPassword:
          type: string
        id:
          type: integer
          format: int32
        roles:
          type: array
          items:
            type: string
    PurchaseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        state:
          type: string
    BookDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        author:
          type: string
        synopsis:
          type: string
        price:
          type: number
          format: double
        ISBN:
          type: integer
          format: int32
        imageFile:
          type: object
          properties:
            binaryStream:
              type: object
    ReviewDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        reviewUser:
          $ref: "#/components/schemas/UserDTO"
        reviewBook:
          $ref: "#/components/schemas/BookDTO"
        content:
          type: string
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
